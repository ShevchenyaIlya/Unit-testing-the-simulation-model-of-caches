        -:    0:Source:/home/shevchenya/CLionProjects/CourseWorkCache/google_tests/cache_created_tests.cpp
        -:    0:Graph:/home/shevchenya/CLionProjects/CourseWorkCache/cmake-build-debug/google_tests/CMakeFiles/google_tests_run.dir/cache_created_tests.cpp.gcno
        -:    0:Data:/home/shevchenya/CLionProjects/CourseWorkCache/cmake-build-debug/google_tests/CMakeFiles/google_tests_run.dir/cache_created_tests.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by shevchenya on 14/11/2020.
        -:    3://
        -:    4:
        -:    5:#include <memory>
        -:    6:
        -:    7:#include "gtest/gtest.h"
        -:    8:#include "../src/Memory.h"
        -:    9:
      112:   10:class CacheMemoryFixture : public ::testing::Test {
       28:   10-block  0
       28:   10-block  1
    $$$$$:   10-block  2
    $$$$$:   10-block  3
       28:   10-block  4
       28:   10-block  5
        -:   11:protected:
       28:   12:    void SetUp() override {
       28:   12-block  0
       56:   13:        MemoryStorage mem ;
       28:   13-block  0
    %%%%%:   13-block  1
       56:   14:        UncachedMem uncachedMem = UncachedMem (mem);
       28:   14-block  0
    %%%%%:   14-block  1
       28:   15:        memModelPtr = std::make_unique<CachedMem> ( uncachedMem);
       28:   15-block  0
       28:   16:    }
        -:   17:    std::unique_ptr<CachedMem> memModelPtr;
        -:   18:};
        -:   19:
        8:   20:TEST_F(CacheMemoryFixture, IsCacheCreated) {
        1:   20-block  0
        1:   20-block  1
        1:   20-block  2
        1:   20-block  3
        1:   20-block  4
    %%%%%:   20-block  5
    %%%%%:   20-block  6
    %%%%%:   20-block  7
    %%%%%:   20-block  8
    %%%%%:   20-block  9
        1:   20-block 10
        1:   20-block 11
        1:   20-block 12
        1:   20-block 13
        1:   20-block 14
        2:   21:    CachedMem cache = *memModelPtr;
        1:   21-block  0
        1:   21-block  1
        1:   21-block  2
    $$$$$:   21-block  3
        1:   21-block  4
    %%%%%:   21-block  5
    %%%%%:   21-block  6
        1:   22:    ASSERT_GT(cache.getDataMemory().size(), 0);
        1:   22-block  0
        1:   22-block  1
    $$$$$:   22-block  2
    $$$$$:   22-block  3
    $$$$$:   22-block  4
    $$$$$:   22-block  5
        1:   22-block  6
        1:   22-block  7
        1:   22-block  8
    %%%%%:   22-block  9
    %%%%%:   22-block 10
    %%%%%:   22-block 11
    %%%%%:   22-block 12
    %%%%%:   22-block 13
    %%%%%:   22-block 14
    %%%%%:   22-block 15
    %%%%%:   22-block 16
    %%%%%:   22-block 17
    %%%%%:   22-block 18
        1:   23:    ASSERT_GT(cache.getCodeMemory().size(), 0);
        1:   23-block  0
    $$$$$:   23-block  1
        1:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
    $$$$$:   23-block  5
    $$$$$:   23-block  6
        1:   23-block  7
        1:   23-block  8
        1:   23-block  9
    %%%%%:   23-block 10
    %%%%%:   23-block 11
    %%%%%:   23-block 12
    %%%%%:   23-block 13
    %%%%%:   23-block 14
    %%%%%:   23-block 15
    %%%%%:   23-block 16
    %%%%%:   23-block 17
    %%%%%:   23-block 18
    %%%%%:   23-block 19
        1:   24:    ASSERT_EQ(cache.getWaitCycles(), 0);
        1:   24-block  0
    $$$$$:   24-block  1
        1:   24-block  2
    $$$$$:   24-block  3
    $$$$$:   24-block  4
    $$$$$:   24-block  5
    $$$$$:   24-block  6
        1:   24-block  7
        1:   24-block  8
        1:   24-block  9
    %%%%%:   24-block 10
    %%%%%:   24-block 11
    %%%%%:   24-block 12
    %%%%%:   24-block 13
    %%%%%:   24-block 14
    %%%%%:   24-block 15
    %%%%%:   24-block 16
    %%%%%:   24-block 17
    %%%%%:   24-block 18
    %%%%%:   24-block 19
        -:   25:
        3:   26:    for (const auto & i : cache.getCodeMemory()[0])
        1:   26-block  0
    $$$$$:   26-block  1
        3:   26-block  2
        2:   26-block  3
        2:   26-block  4
    $$$$$:   26-block  5
        2:   27:        ASSERT_EQ(i.address, 0);
        2:   27-block  0
    $$$$$:   27-block  1
    $$$$$:   27-block  2
    $$$$$:   27-block  3
    $$$$$:   27-block  4
        2:   27-block  5
        2:   27-block  6
        2:   27-block  7
    %%%%%:   27-block  8
    %%%%%:   27-block  9
    %%%%%:   27-block 10
    %%%%%:   27-block 11
    %%%%%:   27-block 12
    %%%%%:   27-block 13
    %%%%%:   27-block 14
    %%%%%:   27-block 15
    %%%%%:   27-block 16
        -:   28:
        -:   29:
        9:   30:    for (int i = 0; i < cache.getDataMemory()[0].size(); i++)
        1:   30-block  0
        9:   30-block  1
        8:   30-block  2
    $$$$$:   30-block  3
        1:   30-block  4
        1:   30-block  5
        8:   31:        ASSERT_EQ(cache.getDataMemory()[2][i].address, 0);
        8:   31-block  0
        8:   31-block  1
    $$$$$:   31-block  2
    $$$$$:   31-block  3
    $$$$$:   31-block  4
    $$$$$:   31-block  5
        8:   31-block  6
        8:   31-block  7
        8:   31-block  8
    %%%%%:   31-block  9
    %%%%%:   31-block 10
    %%%%%:   31-block 11
    %%%%%:   31-block 12
    %%%%%:   31-block 13
    %%%%%:   31-block 14
    %%%%%:   31-block 15
        4:   32:}
        1:   32-block  0
        1:   32-block  1
        1:   32-block  2
        1:   32-block  3
        1:   32-block  4
        1:   32-block  5
        -:   33:
